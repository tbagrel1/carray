.TH "prep_group" 3 "Mon Sep 25 2017" "Version 0.1.3" "C-Array" \" -*- nroff -*-
.ad l
.nh
.SH NAME
prep_group \- Preprocessor macros
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBof_Char\fP   *(char*)"
.br
.ti -1c
.RI "#define \fBof_sChar\fP   *(signed char*)"
.br
.ti -1c
.RI "#define \fBof_uChar\fP   *(unsigned char*)"
.br
.ti -1c
.RI "#define \fBof_Short\fP   *(short*)"
.br
.ti -1c
.RI "#define \fBof_sShort\fP   *(signed short*)"
.br
.ti -1c
.RI "#define \fBof_uShort\fP   *(unsigned short*)"
.br
.ti -1c
.RI "#define \fBof_Int\fP   *(int*)"
.br
.ti -1c
.RI "#define \fBof_sInt\fP   *(signed int*)"
.br
.ti -1c
.RI "#define \fBof_uInt\fP   *(unsigned int*)"
.br
.ti -1c
.RI "#define \fBof_Long\fP   *(long*)"
.br
.ti -1c
.RI "#define \fBof_lLong\fP   *(long long*)"
.br
.ti -1c
.RI "#define \fBof_sLong\fP   *(signed long*)"
.br
.ti -1c
.RI "#define \fBof_slLong\fP   *(signed long long*)"
.br
.ti -1c
.RI "#define \fBof_uLong\fP   *(unsigned long*)"
.br
.ti -1c
.RI "#define \fBof_ulLong\fP   *(unsigned long long*)"
.br
.ti -1c
.RI "#define \fBof_Float\fP   *(float*)"
.br
.ti -1c
.RI "#define \fBof_Double\fP   *(double*)"
.br
.ti -1c
.RI "#define \fBof_lDouble\fP   *(long double*)"
.br
.ti -1c
.RI "#define \fBof_Bool\fP   *(bool*)"
.br
.ti -1c
.RI "#define \fBof_String\fP   (char*)"
.br
.ti -1c
.RI "#define \fBChar\fP(expr)"
.br
.ti -1c
.RI "#define \fBsChar\fP(expr)"
.br
.ti -1c
.RI "#define \fBuChar\fP(expr)"
.br
.ti -1c
.RI "#define \fBShort\fP(expr)"
.br
.ti -1c
.RI "#define \fBsShort\fP(expr)"
.br
.ti -1c
.RI "#define \fBuShort\fP(expr)"
.br
.ti -1c
.RI "#define \fBInt\fP(expr)"
.br
.ti -1c
.RI "#define \fBsInt\fP(expr)"
.br
.ti -1c
.RI "#define \fBuInt\fP(expr)"
.br
.ti -1c
.RI "#define \fBLong\fP(expr)"
.br
.ti -1c
.RI "#define \fBlLong\fP(expr)"
.br
.ti -1c
.RI "#define \fBsLong\fP(expr)"
.br
.ti -1c
.RI "#define \fBslLong\fP(expr)"
.br
.ti -1c
.RI "#define \fBuLong\fP(expr)"
.br
.ti -1c
.RI "#define \fBulLong\fP(expr)"
.br
.ti -1c
.RI "#define \fBFloat\fP(expr)"
.br
.ti -1c
.RI "#define \fBDouble\fP(expr)"
.br
.ti -1c
.RI "#define \fBlDouble\fP(expr)"
.br
.ti -1c
.RI "#define \fBBool\fP(expr)"
.br
.ti -1c
.RI "#define \fBString\fP(expr)"
.br
.ti -1c
.RI "#define \fBfree_Obj\fP   &\fBcarray_free_obj\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBcarray_free_obj\fP (type)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char * \fBChar_holder\fP"
.br
.ti -1c
.RI "signed char * \fBsChar_holder\fP"
.br
.ti -1c
.RI "unsigned char * \fBuChar_holder\fP"
.br
.ti -1c
.RI "short * \fBShort_holder\fP"
.br
.ti -1c
.RI "signed short * \fBsShort_holder\fP"
.br
.ti -1c
.RI "unsigned short * \fBuShort_holder\fP"
.br
.ti -1c
.RI "int * \fBInt_holder\fP"
.br
.ti -1c
.RI "signed int * \fBsInt_holder\fP"
.br
.ti -1c
.RI "unsigned int * \fBuInt_holder\fP"
.br
.ti -1c
.RI "long * \fBLong_holder\fP"
.br
.ti -1c
.RI "long long * \fBlLong_holder\fP"
.br
.ti -1c
.RI "signed long * \fBsLong_holder\fP"
.br
.ti -1c
.RI "signed long long * \fBslLong_holder\fP"
.br
.ti -1c
.RI "unsigned long * \fBuLong_holder\fP"
.br
.ti -1c
.RI "unsigned long long * \fBulLong_holder\fP"
.br
.ti -1c
.RI "float * \fBFloat_holder\fP"
.br
.ti -1c
.RI "double * \fBDouble_holder\fP"
.br
.ti -1c
.RI "long double * \fBlDouble_holder\fP"
.br
.ti -1c
.RI "bool * \fBBool_holder\fP"
.br
.ti -1c
.RI "char * \fBString_holder\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SH "Macro Definition Documentation"
.PP 
.SS "#define Bool(expr)"
\fBValue:\fP
.PP
.nf
(Bool_holder = malloc(sizeof(bool)), \
     *Bool_holder = (expr), Bool_holder)
.fi
.PP
Definition at line 189 of file carray\&.h\&.
.SS "#define Char(expr)"
\fBValue:\fP
.PP
.nf
(Char_holder = malloc(sizeof(char)), \
     *Char_holder = (expr), Char_holder)
.fi
.PP
Definition at line 99 of file carray\&.h\&.
.SS "#define Double(expr)"
\fBValue:\fP
.PP
.nf
(Double_holder = malloc(sizeof(double)), \
     *Double_holder = (expr), Double_holder)
.fi
.PP
Definition at line 179 of file carray\&.h\&.
.SS "#define Float(expr)"
\fBValue:\fP
.PP
.nf
(Float_holder = malloc(sizeof(float)), \
     *Float_holder = (expr), Float_holder)
.fi
.PP
Definition at line 174 of file carray\&.h\&.
.SS "#define Int(expr)"
\fBValue:\fP
.PP
.nf
(Int_holder = malloc(sizeof(int)), \
     *Int_holder = (expr), Int_holder)
.fi
.PP
Definition at line 129 of file carray\&.h\&.
.SS "#define lDouble(expr)"
\fBValue:\fP
.PP
.nf
(lDouble_holder = malloc(sizeof(long double)), \
     *lDouble_holder = (expr), lDouble_holder)
.fi
.PP
Definition at line 184 of file carray\&.h\&.
.SS "#define lLong(expr)"
\fBValue:\fP
.PP
.nf
(lLong_holder = malloc(sizeof(long long)), \
     *lLong_holder = (expr), lLong_holder)
.fi
.PP
Definition at line 149 of file carray\&.h\&.
.SS "#define Long(expr)"
\fBValue:\fP
.PP
.nf
(Long_holder = malloc(sizeof(long)), \
     *Long_holder = (expr), Long_holder)
.fi
.PP
Definition at line 144 of file carray\&.h\&.
.SS "#define sChar(expr)"
\fBValue:\fP
.PP
.nf
(sChar_holder = malloc(sizeof(signed char)), \
     *sChar_holder = (expr), sChar_holder)
.fi
.PP
Definition at line 104 of file carray\&.h\&.
.SS "#define Short(expr)"
\fBValue:\fP
.PP
.nf
(Short_holder = malloc(sizeof(short)), \
     *Short_holder = (expr), Short_holder)
.fi
.PP
Definition at line 114 of file carray\&.h\&.
.SS "#define sInt(expr)"
\fBValue:\fP
.PP
.nf
(sInt_holder = malloc(sizeof(signed int)), \
     *sInt_holder = (expr), sInt_holder)
.fi
.PP
Definition at line 134 of file carray\&.h\&.
.SS "#define slLong(expr)"
\fBValue:\fP
.PP
.nf
(slLong_holder = malloc(sizeof(signed long long)), \
     *slLong_holder = (expr), slLong_holder)
.fi
.PP
Definition at line 159 of file carray\&.h\&.
.SS "#define sLong(expr)"
\fBValue:\fP
.PP
.nf
(sLong_holder = malloc(sizeof(signed long)), \
     *sLong_holder = (expr), sLong_holder)
.fi
.PP
Definition at line 154 of file carray\&.h\&.
.SS "#define sShort(expr)"
\fBValue:\fP
.PP
.nf
(sShort_holder = malloc(sizeof(signed short)), \
     *sShort_holder = (expr), sShort_holder)
.fi
.PP
Definition at line 119 of file carray\&.h\&.
.SS "#define String(expr)"
\fBValue:\fP
.PP
.nf
(String_holder = malloc(sizeof(expr) / sizeof(char)), \
     strcpy(String_holder, (expr)), \
     String_holder)
.fi
.PP
Definition at line 194 of file carray\&.h\&.
.SS "#define uChar(expr)"
\fBValue:\fP
.PP
.nf
(uChar_holder = malloc(sizeof(unsigned char)), \
     *uChar_holder = (expr), uChar_holder)
.fi
.PP
Definition at line 109 of file carray\&.h\&.
.SS "#define uInt(expr)"
\fBValue:\fP
.PP
.nf
(uInt_holder = malloc(sizeof(unsigned int)), \
     *uInt_holder = (expr), uInt_holder)
.fi
.PP
Definition at line 139 of file carray\&.h\&.
.SS "#define ulLong(expr)"
\fBValue:\fP
.PP
.nf
(ulLong_holder = malloc(sizeof(unsigned long long)), \
     *ulLong_holder = (expr), ulLong_holder)
.fi
.PP
Definition at line 169 of file carray\&.h\&.
.SS "#define uLong(expr)"
\fBValue:\fP
.PP
.nf
(uLong_holder = malloc(sizeof(unsigned long)), \
     *uLong_holder = (expr), uLong_holder)
.fi
.PP
Definition at line 164 of file carray\&.h\&.
.SS "#define uShort(expr)"
\fBValue:\fP
.PP
.nf
(uShort_holder = malloc(sizeof(unsigned short)), \
     *uShort_holder = (expr), uShort_holder)
.fi
.PP
Definition at line 124 of file carray\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void carray_free_obj (type val)"
Frees the specified primitive-wrapped element\&. 
.PP
\fBParameters:\fP
.RS 4
\fIval\fP primitive-wrapped element to free 
.RE
.PP

.PP
Definition at line 1077 of file carray\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for C-Array from the source code\&.
